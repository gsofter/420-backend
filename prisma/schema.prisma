// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum BreedPairStatus {
  PAIRED
  COMPLETED
  MAX_REACHED
  FAILED
}

enum BreedSlotType {
  INDOOR
  OUTDOOR
}

enum BudGender {
  M
  F
}

enum BudColor {
  Light
  Medium
  Dark
}

enum BudShine {
  Yes
  No
}

enum GiftAmount {
  USD100
  USD200
  USD420
  USD1000
}

// Description: User data following sign-up workflow.
model User {
  address       String   @id @db.VarChar(42)
  signature     String   @db.Text
  gameKeyId     Int?     @db.Integer
  breedingPoint Int      @default(0) @db.Integer
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relationships
  pairs BreedPair[]

  BreedingPointLog BreedingPointLog[]
  @@unique([address])
  @@index([address])
}

model BreedPair {
  id           Int             @id @default(autoincrement())
  maleBudId    Int
  femaleBudId  Int
  rate         Float
  createdAt    DateTime        @default(now())
  updatedAt    DateTime        @updatedAt
  userAddress  String          @db.VarChar(42)
  currentLevel Int             @default(0)
  status       BreedPairStatus
  slotId       Int

  // Relationships
  user   User         @relation(fields: [userAddress], references: [address])
  levels BreedLevel[]

  @@index([id, userAddress, status])
}

model BreedLevel {
  id               Int      @id @default(autoincrement())
  pairId           Int
  level            Int      @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  bonusRate        Float    @default(0)
  maleBreedBudId   Int?
  femaleBreedBudId Int?

  // Relationships
  buds BreedBud[]
  pair BreedPair  @relation(fields: [pairId], references: [id])

  @@unique([pairId, level])
  @@index([pairId, level])
}

model BreedBud {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar
  image     String    @db.VarChar
  thc       Int
  budSize   Int
  gender    BudGender
  shine     BudShine
  color     BudColor
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  levelId   Int

  // Relationship
  level BreedLevel @relation(fields: [levelId], references: [id])

  @@index([id, thc])
  @@index([levelId])
}

model BreedSlot {
  id          Int           @id @default(autoincrement())
  isOpen      Boolean       @default(false)
  isUsed      Boolean       @default(false)
  type        BreedSlotType @default(OUTDOOR)
  gameKeyId   Int?
  landTokenId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userAddress String @db.VarChar(42)

  @@index([userAddress, isOpen])
}

model BreedingPointLog {
  id          Int      @id @default(autoincrement())
  userAddress String
  txHash      String
  block       Int
  amount      Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  user User @relation(fields: [userAddress], references: [address])
}

model Gen1Bud {
  id            Int       @id @default(autoincrement())
  name          String    @db.VarChar
  image         String    @db.VarChar
  thc           Int
  budSize       Int
  gender        BudGender
  shine         BudShine
  color         BudColor
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  minterAddress String

  signature String @db.Text

  // Foreign keys
  pairId Int?

  @@index([minterAddress, id])
}

model GiftCard {
  id            Int        @id @default(autoincrement())
  value         GiftAmount
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  minterAddress String

  signature String @db.Text
  pairId    Int?

  @@index([minterAddress, id])
  @@index([value])
}
